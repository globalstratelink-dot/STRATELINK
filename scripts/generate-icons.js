const fs = require('fs');
const path = require('path');

// Tailles d'ic√¥nes n√©cessaires
const iconSizes = [
  { name: 'favicon.ico', size: 32 },
  { name: 'icon-16x16.png', size: 16 },
  { name: 'icon-32x32.png', size: 32 },
  { name: 'icon-192x192.png', size: 192 },
  { name: 'icon-512x512.png', size: 512 },
  { name: 'apple-touch-icon.png', size: 180 }
];

// Cr√©er les fichiers d'ic√¥nes (copie du logo existant pour l'instant)
const publicDir = path.join(__dirname, '..', 'public');
const logoPath = path.join(publicDir, 'new-logo.png');

console.log('üé® G√©n√©ration des ic√¥nes du site...');

iconSizes.forEach(icon => {
  const iconPath = path.join(publicDir, icon.name);
  
  // Pour l'instant, on copie le logo existant
  // En production, vous devriez utiliser une biblioth√®que comme sharp pour redimensionner
  if (fs.existsSync(logoPath)) {
    fs.copyFileSync(logoPath, iconPath);
    console.log(`‚úÖ ${icon.name} cr√©√© (${icon.size}x${icon.size})`);
  } else {
    console.log(`‚ùå Logo source non trouv√©: ${logoPath}`);
  }
});

console.log('üéâ G√©n√©ration des ic√¥nes termin√©e !');
console.log('üí° Note: Pour un redimensionnement optimal, utilisez une biblioth√®que comme sharp'); 